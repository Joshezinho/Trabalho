get_label(proc_data$conf_inst)
# Cambiar categoría a variable nueva
proc_data$conf_inst  <- set_label(x = proc_data$conf_inst, label = "Confianza en instituciones")
get_label(proc_data$conf_inst)
# 4.1.9 Revisión Final
## Descriptivo para asegurar recodificación
# Confianza en el Gobierno
frq(proc_data$conf_gob)
# Confianza en el Congreso
frq(proc_data$conf_cong)
# Confianza en el Poder Judicial
frq(proc_data$conf_jud)
# Confianza en los Partidos Políticos
frq(proc_data$conf_partpol)
# Confianza en las instituciones
frq(proc_data$conf_inst)
# 4.1.10 Asignar etiquetas a los valores de las variables
proc_data$conf_gob <- set_labels(proc_data$conf_gob,
labels=c( "Ninguna"=0,
"Poca"=1,
"Algo"=2,
"Mucha"=3))
proc_data$conf_cong <- set_labels(proc_data$conf_cong,
labels=c( "Ninguna"=0,
"Poca"=1,
"Algo"=2,
"Mucha"=3))
proc_data$conf_jud <- set_labels(proc_data$conf_jud,
labels=c( "Ninguna"=0,
"Poca"=1,
"Algo"=2,
"Mucha"=3))
proc_data$conf_partpol <- set_labels(proc_data$conf_partpol,
labels=c( "Ninguna"=0,
"Poca"=1,
"Algo"=2,
"Mucha"=3))
# Confianza en las instituciones
frq(proc_data$conf_inst)
# 4.1.10 Asignar etiquetas a los valores de las variables
proc_data$conf_gob <- set_labels(proc_data$conf_gob,
labels=c( "Ninguna"=0,
"Poca"=1,
"Algo"=2,
"Mucha"=3))
proc_data$conf_cong <- set_labels(proc_data$conf_cong,
labels=c( "Ninguna"=0,
"Poca"=1,
"Algo"=2,
"Mucha"=3))
proc_data$conf_jud <- set_labels(proc_data$conf_jud,
labels=c( "Ninguna"=0,
"Poca"=1,
"Algo"=2,
"Mucha"=3))
proc_data$conf_partpol <- set_labels(proc_data$conf_partpol,
labels=c( "Ninguna"=0,
"Poca"=1,
"Algo"=2,
"Mucha"=3))
#
save(proc_data, file ="input/proc_data.rdata")
# Confianza en las instituciones
frq(proc_data$conf_inst)
#4.1.10.2 Chequear las categorías de respuesta
# Confianza en el Gobierno
frq(proc_data$conf_gob)
# Confianza en el Congreso
frq(proc_data$conf_cong)
# Confianza en el Poder Judicial
frq(proc_data$conf_jud)
# Confianza en los Partidos Políticos
frq(proc_data$conf_partpol)
#
save(proc_data, file ="input/proc_data.rdata")
##4.2. Educación
frq(proc_data$reeduc_1)
# 4.2.2 Recodificación de la variable
proc_data$reeduc_1 <- car::recode(proc_data$reeduc_1, "c(1,2,3)=1; c(4,5)=2; c(6,7)=3")
# 4.2.3 Revisión de descriptivos
frq(proc_data$reeduc_1)
# 4.2.4 Etiquetado
proc_data$reeduc_1 <- factor(proc_data$reeduc_1,
labels = c("Educacion basica", "Educacion media", "Educacion superior"),
levels = c(1, 2, 3))
# 4.2.3 Revisión de descriptivos
frq(proc_data$reeduc_1)
# 4.2.5 Renombrar variable
proc_data <- rename(proc_data,"educacion"=reeduc_1)
# 4.2.6 Etiquetar variable
# 4.2.6.1 Comprobar etiqueta existente
get_label(proc_data$educacion)
# 4.2.6.2 Asignar etiqueta a la variable
proc_data$educacion <- set_label(x = proc_data$educacion,label = "Educación")
# 4.2.6 Etiquetar variable
# 4.2.6.1 Comprobar etiqueta existente
get_label(proc_data$educacion)
## 4.3 Sexo
# 4.3.1. Descriptivos de la variable
frq(proc_data$sexo)
#4.3.2 Recodificación de la variable
proc_data$sexo <- car::recode(proc_data$sexo, "1=0;2=1")
# 4.3.3 Etiquetado
proc_data$sexo <- factor(proc_data$sexo,
labels=c( "Hombre",
"Mujer"),
levels=c(0,1))
## 4.3 Sexo
# 4.3.1 Descriptivos de la variable
frq(proc_data$sexo)
# 4.3.4 Etiquetar variable
# 4.3.4.1 Comprobar etiqueta existente
get_label(proc_data$sexo)
# 4.2.6.2 Asignar etiqueta a la variable
proc_data$sexo <- set_label(x = proc_data$sexo,label = "Sexo")
# 4.3.4 Etiquetar variable
# 4.3.4.1 Comprobar etiqueta existente
get_label(proc_data$sexo)
## 4.4 Edad
# 4.4.1 Descriptivos
frq(proc_data$edad)
# 4.4.2 Etiquetar variable
# 4.4.2.1 Comprobar etiqueta existente
get_label(proc_data$edad)
# 4.4.2.2 Asignar etiqueta a la variable
proc_data$edad <- set_label(x = proc_data$edad,label = "Edad")
# 4.4.2 Etiquetar variable
# 4.4.2.1 Comprobar etiqueta existente
get_label(proc_data$edad)
#### 5. Generar base de datos procesada para el análisis ####
## 5.1 Reformatear objeto (proc_data) a BBDD
proc_data <-as.data.frame(proc_data)
## 5.2 Generar tabla descriptiva general
stargazer(proc_data, type="text")
## 5.3 Guardar base de datos en una ruta particular
save(proc_data, file ="input/proc_data.rdata")
#### Descriptivos básicos de las variables ####
## Medias por grupos
proc_data %>% dplyr::group_by(sexo) %>% summarise(mean(conf_inst, na.rm=TRUE))
# Media por nivel educativo de confianza en las instituciones
proc_data %>% dplyr::group_by(educacion) %>% summarise(mean(conf_inst, na.rm=TRUE))
# Representación de las medias
sjt.xtab(proc_data$educacion, proc_data$conf_inst, encoding = "UTF-8")
library(sjPlot)
# Representación de las medias
# Instalar y llamar al paquete sjPlot
install.packages("sjPlot")
install.packages("sjPlot")
library(sjPlot)
# Generar tabla de representación
sjt.xtab(proc_data$educacion, proc_data$conf_inst, encoding = "UTF-8")
# Representación de las medias
# Instalar y llamar al paquete sjPlot
install.packages("sjPlot")
library(sjPlot)
# Generar tabla de representación
sjt.xtab(proc_data$educacion, proc_data$conf_inst, encoding = "UTF-8")
library(sjPlot)
# Generar tabla de representación
sjt.xtab(proc_data$educacion, proc_data$conf_inst, encoding = "UTF-8")
# Generar tabla de representación
sjt.xtab(proc_data$educacion, proc_data$conf_inst, encoding = "UTF-8")
library(sjPlot)
# Generar tabla de representación
sjt.xtab(proc_data$educacion, proc_data$conf_inst, encoding = "UTF-8")
library(sjmisc)
# Generar tabla de representación
sjt.xtab(proc_data$educacion, proc_data$conf_inst, encoding = "UTF-8")
#### 1. Cargar librerías ####
pacman::p_load(sjlabelled,
dplyr, #Manipulacion de datos
stargazer, #Tablas
sjmisc, # Tablas
summarytools, # Tablas
kableExtra, #Tablas
sjPlot, #Tablas y gráficos
corrplot, # Correlaciones
sessioninfo, # Información de la sesión de trabajo
ggplot2) # Para la mayoría de los gráficos
#### 1. Cargar librerías ####
pacman::p_load(sjlabelled,
dplyr, #Manipulacion de datos
stargazer, #Tablas
sjmisc, # Tablas
summarytools, # Tablas
kableExtra, #Tablas
sjPlot, #Tablas y gráficos
corrplot, # Correlaciones
sessioninfo, # Información de la sesión de trabajo
ggplot2) # Para la mayoría de los gráficos
#### 2. Cargar base de datos ####
load("input/latinobarometro2020.rdata")
names(proc_data) # Muestra los nombres de las variables de la base de datos
#### 2. Cargar base de datos ####
load(url("https://github.com/Kevin-carrasco/R-data-analisis/raw/main/files/data/latinobarometro_total.RData")) #Cargar base de datos
#### 3. Descripción de variables ####
# 3.1 Tabla descriptiva
stargazer(proc_data,type = "text")
# 3.2 Tabla descriptiva con descr
sjmisc::descr(proc_data)
# 3.2.1 Seleccionar sólo columnas que nos interesan
sjmisc::descr(proc_data,
show = c("label","range", "mean", "sd", "NA.prc", "n"))%>%
kable(.,"markdown")
# 3.3 Tabla descriptiva con summarytools
summarytools::dfSummary(proc_data, plain.ascii = FALSE)
# 3.3 Tabla descriptiva con summarytools
summarytools::dfSummary(proc_data, plain.ascii = FALSE)
#### 1. Cargar librerías ####
pacman::p_load(sjlabelled,
dplyr, #Manipulacion de datos
stargazer, #Tablas
sjmisc, # Tablas
summarytools, # Tablas
kableExtra, #Tablas
sjPlot, #Tablas y gráficos
corrplot, # Correlaciones
sessioninfo, # Información de la sesión de trabajo
ggplot2) # Para la mayoría de los gráficos
# 3.3 Tabla descriptiva con summarytools
summarytools::dfSummary(proc_data, plain.ascii = FALSE)
#3.3.1 Tabla pequeña
view(dfSummary(proc_data, headings=FALSE))
# 3.4 Casos perdidos
# 3.4.1 Dimensiones de la BBDD
proc_data_original <-proc_data
dim(proc_data)
# 3.4.2 Sumatoria de todos los NA
sum(is.na(proc_data))
# 3.4.3 Omitir casos perdidos
proc_data <-na.omit(proc_data)
dim(proc_data)
proc_data <-sjlabelled::copy_labels(proc_data,proc_data_original)
# 3.5 Visualización de variables
# ggplot funcina por capas, por ende hay que ir guíandolo paso a paso
proc_data %>% ggplot(aes(x = conf_inst)) +
geom_bar(fill = "coral")+
labs(title = "Confianza en instituciones",
x = "Confianza en instituciones",
y = "Frecuencia")
# 3.5.1 Crear el gráfico usando ggplot2
graph1 <- proc_data %>% ggplot(aes(x = conf_inst)) +
geom_bar(fill = "coral")+
labs(title = "Confianza en instituciones",
x = "Confianza en instituciones",
y = "Frecuencia") +
theme_bw()
graph1
# 3.5.1.2 Guardar el gráfico
ggsave(graph1, file="files/img/graph1.png")
# 3.6 Exploración de asociación entre variables
#3.6.1 Tablas de contingencia para variables categóricas
sjt.xtab(proc_data$educacion, proc_data$sexo)
# 3.6 Exploración de asociación entre variables
#3.6.1 Tablas de contingencia para variables categóricas
library(sjMisc)
# 3.6 Exploración de asociación entre variables
#3.6.1 Tablas de contingencia para variables categóricas
install.packages("sjMisc")
library(sjMisc)
sjt.xtab(proc_data$educacion, proc_data$sexo)
# 3.6 Exploración de asociación entre variables
#3.6.1 Tablas de contingencia para variables categóricas
install.packages("sjPlot")
library(sjPlot)
sjt.xtab(proc_data$educacion, proc_data$sexo)
library(sjmisc)
# 3.6 Exploración de asociación entre variables
#3.6.1 Tablas de contingencia para variables categóricas
sjt.xtab(proc_data$educacion, proc_data$sexo)
library(sjPlot)
# 3.6 Exploración de asociación entre variables
#3.6.1 Tablas de contingencia para variables categóricas
sjt.xtab(proc_data$educacion, proc_data$sexo)
# 3.6 Exploración de asociación entre variables
#3.6.1 Tablas de contingencia para variables categóricas
sjPlot::sjt.xtab(proc_data$educacion, proc_data$sexo)
install.packages(sjPlot)
install.packages(sjPlot)
install.packages(sjPlot)
install.packages("sjPlot")
library(sjPlot)
# 3.6 Exploración de asociación entre variables
#3.6.1 Tablas de contingencia para variables categóricas
sjPlot::sjt.xtab(proc_data$educacion, proc_data$sexo)
# 3.6 Exploración de asociación entre variables
#3.6.1 Tablas de contingencia para variables categóricas
sjt.xtab(proc_data$educacion, proc_data$sexo)
library(sjPlot)
# 3.6 Exploración de asociación entre variables
#3.6.1 Tablas de contingencia para variables categóricas
sjt.xtab(proc_data$educacion, proc_data$sexo)
sjt.xtab(proc_data$educacion, proc_data$sexo)
#### 1. Cargar librerías ####
pacman::p_load(sjlabelled,
dplyr, #Manipulacion de datos
stargazer, #Tablas
sjmisc, # Tablas
summarytools, # Tablas
kableExtra, #Tablas
sjPlot, #Tablas y gráficos
corrplot, # Correlaciones
sessioninfo, # Información de la sesión de trabajo
ggplot2) # Para la mayoría de los gráficos
#### 2. Cargar base de datos ####
load(url("https://github.com/Kevin-carrasco/R-data-analisis/raw/main/files/data/latinobarometro_total.RData")) #Cargar base de datos
#### 3. Descripción de variables ####
# 3.1 Tabla descriptiva con stargazer
stargazer(proc_data,type = "text")
# 3.2 Tabla descriptiva con descr
sjmisc::descr(proc_data)
# 3.2.1 Seleccionar sólo columnas que nos interesan
sjmisc::descr(proc_data,
show = c("label","range", "mean", "sd", "NA.prc", "n"))%>%
kable(.,"markdown")
# 3.3 Tabla descriptiva con summarytools
summarytools::dfSummary(proc_data, plain.ascii = FALSE)
# 3.3.1 Tabla pequeña
view(dfSummary(proc_data, headings=FALSE))
# 3.4 Casos perdidos
# 3.4.1 Dimensiones de la BBDD
proc_data_original <-proc_data
dim(proc_data)
# 3.4.2 Sumatoria de todos los NA
sum(is.na(proc_data))
# 3.4.3 Omitir casos perdidos
proc_data <-na.omit(proc_data)
dim(proc_data)
# 3.4.4 Recuperar etiqueta
proc_data <-sjlabelled::copy_labels(proc_data,proc_data_original)
# 3.5 Visualización de variables
# ggplot funcina por capas, por ende hay que ir guíandolo paso a paso
proc_data %>% ggplot(aes(x = conf_inst)) +
geom_bar(fill = "coral")+
labs(title = "Confianza en instituciones",
x = "Confianza en instituciones",
y = "Frecuencia")
# 3.5.1 Crear el gráfico usando ggplot2
graph1 <- proc_data %>% ggplot(aes(x = conf_inst)) +
geom_bar(fill = "coral")+
labs(title = "Confianza en instituciones",
x = "Confianza en instituciones",
y = "Frecuencia") +
theme_bw()
graph1
# 3.5.1.2 Guardar el gráfico
ggsave(graph1, file="files/img/graph1.png")
# 3.6 Exploración de asociación entre variables
#3.6.1 Tablas de contingencia para variables categóricas
sjt.xtab(proc_data$educacion, proc_data$sexo)
# 3.6.2 Tablas de contingencia con porcentaje fila/columna
sjt.xtab(proc_data$educacion, proc_data$sexo,
show.col.prc=TRUE,
show.summary=FALSE,
encoding = "UTF-8")
# 3.6.3 Tabla de contingencia para variables categóricas
sjt.xtab(proc_data$educacion, proc_data$sexo)
#3.6.3.1 Agregar porcentaje fila/columna
sjt.xtab(proc_data$educacion, proc_data$sexo,
show.col.prc=TRUE,
show.summary=FALSE,
encoding = "UTF-8")
# 3.6.3 Tabla de contingencia para variables categóricas
sjt.xtab(proc_data$educacion, proc_data$sexo)
#3.6.3.1 Agregar porcentaje fila/columna
sjt.xtab(proc_data$educacion, proc_data$sexo,
show.col.prc=TRUE,
show.summary=FALSE,
encoding = "UTF-8")
# 3,7 Tablas de promedio de variable continua por una categóricas
tapply(proc_data$conf_inst, proc_data$educacion, mean)
# 3.7.1 Tabla de promedio con mayor información
proc_data %>% # se especifica la base de datos
select(conf_inst,educacion) %>% # se seleccionan las variables
dplyr::group_by(Educación=sjlabelled::as_label(educacion)) %>% # se agrupan por la variable categórica y se usan sus etiquetas con as_label
dplyr::summarise(Obs.=n(),Promedio=mean(conf_inst),SD=sd(conf_inst)) %>% # se agregan las operaciones a presentar en la tabla
kable(., format = "markdown") # se genera la tabla
Quarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see <https://quarto.org>.
---
title: "Trabalho 5"
pacman::p_load(sjlabelled,
dplyr, #Manipulacion de datos
stargazer, #Tablas
sjmisc, # Tablas
summarytools, # Tablas
kableExtra, #Tablas
sjPlot, #Tablas y gráficos
corrplot, # Correlaciones
sessioninfo, # Información de la sesión de trabajo
ggplot2) # Para la mayoría de los gráficos
load(url("https://github.com/Kevin-carrasco/R-data-analisis/raw/main/files/data/data_wvs.RData")) #Cargar base de datos
load(url("https://github.com/Kevin-carrasco/R-data-analisis/raw/main/files/data/data_wvs.RData")) #Cargar base de datos
load(url("https://github.com/Kevin-carrasco/R-data-analisis/raw/main/files/data/latinobarometro_total.RData")) #Cargar base de datos
context_data <- wvs %>% group_by(B_COUNTRY) %>% # Agrupar por país
summarise(gdp = mean(GDPpercap1, na.rm = TRUE), # Promedio de GDP per capita
life_exp = mean(lifeexpect, na.rm = TRUE), # Promedio esperanza de vida
gini = mean(giniWB, na.rm = TRUE)) %>%  # Promedio gini
rename(idenpa=B_COUNTRY) # Para poder vincular ambas bases, es necesario que la variable de identificación se llamen igual
context_data$idenpa <- as.numeric(context_data$idenpa) # Como era categórica, la dejamos numérica
proc_data <- proc_data %>% group_by(idenpa) %>%  # agrupamos por país
summarise(promedio = mean(conf_inst, na.rm = TRUE)) # promedio de confianza en instituciones por país
proc_data <- proc_data %>% group_by(idenpa) %>%  # agrupamos por país
summarise(promedio = mean(conf_inst, na.rm = TRUE)) # promedio de confianza en instituciones por país
View(context_data)
View(proc_data)
load(url("https://github.com/Kevin-carrasco/R-data-analisis/raw/main/files/data/latinobarometro_total.RData")) #Cargar base de datos
load(url("https://github.com/Kevin-carrasco/R-data-analisis/raw/main/files/data/data_wvs.RData")) #Cargar base de datos
proc_data <- proc_data %>% group_by(idenpa) %>%  # agrupamos por país
summarise(promedio = mean(conf_inst, na.rm = TRUE)) # promedio de confianza en instituciones por país
View(proc_data)
View(context_data)
View(wvs)
proc_data <- proc_data %>% group_by(idenpa) %>%  # agrupamos por país
summarise(promedio = mean(conf_inst, na.rm = TRUE)) # promedio de confianza en instituciones por país
View(proc_data)
load(url("https://github.com/Kevin-carrasco/R-data-analisis/raw/main/files/data/latinobarometro_total.RData")) #Cargar base de datos
load(url("https://github.com/Kevin-carrasco/R-data-analisis/raw/main/files/data/data_wvs.RData")) #Cargar base de datos
context_data <- wvs %>% group_by(B_COUNTRY) %>% # Agrupar por país
summarise(gdp = mean(GDPpercap1, na.rm = TRUE), # Promedio de GDP per capita
life_exp = mean(lifeexpect, na.rm = TRUE), # Promedio esperanza de vida
gini = mean(giniWB, na.rm = TRUE)) %>%  # Promedio gini
rename(idenpa=B_COUNTRY) # Para poder vincular ambas bases, es necesario que la variable de identificación se llamen igual
context_data$idenpa <- as.numeric(context_data$idenpa) # Como era categórica, la dejamos numérica
proc_data <- proc_data %>% group_by(idenpa) %>%  # agrupamos por país
summarise(promedio = mean(conf_inst, na.rm = TRUE)) # promedio de confianza en instituciones por país
proc_data <- proc_data %>% group_by(idenpa) %>%  # agrupamos por país
summarise(promedio = mean(conf_inst, na.rm = TRUE)) # promedio de confianza en instituciones por país
load(url("https://github.com/Kevin-carrasco/R-data-analisis/raw/main/files/data/latinobarometro_total.RData")) #Cargar base de datos
load(url("https://github.com/Kevin-carrasco/R-data-analisis/raw/main/files/data/data_wvs.RData")) #Cargar base de datos
context_data <- wvs %>% group_by(B_COUNTRY) %>% # Agrupar por país
summarise(gdp = mean(GDPpercap1, na.rm = TRUE), # Promedio de GDP per capita
life_exp = mean(lifeexpect, na.rm = TRUE), # Promedio esperanza de vida
gini = mean(giniWB, na.rm = TRUE)) %>%  # Promedio gini
rename(idenpa=B_COUNTRY) # Para poder vincular ambas bases, es necesario que la variable de identificación se llamen igual
context_data$idenpa <- as.numeric(context_data$idenpa) # Como era categórica, la dejamos numérica
proc_data <- proc_data %>% group_by(idenpa) %>%  # agrupamos por país
summarise(promedio = mean(conf_inst, na.rm = TRUE)) # promedio de confianza en instituciones por país
View(proc_data)
View(proc_data)
View(context_data)
data <- merge(proc_data, context_data, by="idenpa")
pacman::p_load(sjlabelled,
dplyr, #Manipulacion de datos
stargazer, #Tablas
sjmisc, # Tablas
summarytools, # Tablas
kableExtra, #Tablas
sjPlot, #Tablas y gráficos
corrplot, # Correlaciones
sessioninfo, # Información de la sesión de trabajo
ggplot2) # Para la mayoría de los gráficos
load(url("https://github.com/Kevin-carrasco/R-data-analisis/raw/main/files/data/latinobarometro_total.RData")) #Cargar base de datos
load(url("https://github.com/Kevin-carrasco/R-data-analisis/raw/main/files/data/data_wvs.RData")) #Cargar base de datos
context_data <- wvs %>% group_by(B_COUNTRY) %>% # Agrupar por país
summarise(gdp = mean(GDPpercap1, na.rm = TRUE), # Promedio de GDP per capita
life_exp = mean(lifeexpect, na.rm = TRUE), # Promedio esperanza de vida
gini = mean(giniWB, na.rm = TRUE)) %>%  # Promedio gini
rename(idenpa=B_COUNTRY) # Para poder vincular ambas bases, es necesario que la variable de identificación se llamen igual
context_data$idenpa <- as.numeric(context_data$idenpa) # Como era categórica, la dejamos numérica
proc_data <- proc_data %>% group_by(idenpa) %>%  # agrupamos por país
summarise(promedio = mean(conf_inst, na.rm = TRUE)) # promedio de confianza en instituciones por país
data <- merge(proc_data, context_data, by="idenpa")
data <- data %>%
mutate(idenpa = as.character(idenpa)) %>%
mutate(idenpa = case_when(
idenpa == "32" ~ "Argentina",
idenpa == "68" ~ "Bolivia",
idenpa == "76" ~ "Brasil",
idenpa == "152" ~ "Chile",
idenpa == "170" ~ "Colombia",
idenpa == "188" ~ "Costa Rica",
idenpa == "214" ~ "Cuba",
idenpa == "218" ~ "República Dominicana",
idenpa == "222" ~ "Ecuador",
idenpa == "320" ~ "El Salvador",
idenpa == "340" ~ "Guatemala",
idenpa == "484" ~ "Honduras",
idenpa == "558" ~ "México",
idenpa == "591" ~ "Nicaragua",
idenpa == "600" ~ "Panamá",
idenpa == "604" ~ "Paraguay",
idenpa == "858" ~ "Uruguay",
idenpa == "862" ~ "Venezuela"))
data$gdp <- as.numeric(data$gdp)
data$gdp[data$gdp==0] <- NA
data <- na.omit(data)
sjmisc::descr(data,
show = c("label","range", "mean", "sd", "NA.prc", "n"))%>% # Selecciona estadísticos
kable(.,"markdown") # Esto es para que se vea bien en quarto
ggplot(data, aes(x = idenpa, y = gdp)) +
geom_point() +
labs(x = "País", y = "Gdp") +
theme_minimal()+
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(data_sorted, aes(x = factor(idenpa, levels = idenpa), y = gdp)) +
geom_point() +
labs(x = "País", y = "GDP") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
data_sorted <- data %>% arrange(desc(gdp))
ggplot(data_sorted, aes(x = factor(idenpa, levels = idenpa), y = gdp)) +
geom_point() +
labs(x = "País", y = "GDP") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
data %>%
ggplot(aes(x = gdp, y = promedio, label = idenpa)) +
geom_point() +
geom_text(vjust = -0.5) +
labs(x = "GDP", y = "Promedio") +
theme_bw()
rm(list(ls))
