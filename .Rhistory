sessioninfo, # Información de la sesión de trabajo
ggplot2) # Para la mayoría de los gráficos
load(url("https://github.com/Kevin-carrasco/R-data-analisis/raw/main/files/data/latinobarometro_total.RData")) #Cargar base de datos
load(url("https://github.com/Kevin-carrasco/R-data-analisis/raw/main/files/data/data_wvs.RData")) #Cargar base de datos
context_data <- wvs %>% group_by(B_COUNTRY) %>% # Agrupar por país
summarise(gdp = mean(GDPpercap1, na.rm = TRUE), # Promedio de GDP per capita
life_exp = mean(lifeexpect, na.rm = TRUE), # Promedio esperanza de vida
gini = mean(giniWB, na.rm = TRUE)) %>%  # Promedio gini
rename(idenpa=B_COUNTRY) # Para poder vincular ambas bases, es necesario que la variable de identificación se llamen igual
context_data$idenpa <- as.numeric(context_data$idenpa) # Como era categórica, la dejamos numérica
proc_data <- proc_data %>% group_by(idenpa) %>%  # agrupamos por país
summarise(promedio = mean(conf_inst, na.rm = TRUE)) # promedio de confianza en instituciones por país
data <- merge(proc_data, context_data, by="idenpa")
data <- data %>%
mutate(idenpa = as.character(idenpa)) %>%
mutate(idenpa = case_when(
idenpa == "32" ~ "Argentina",
idenpa == "68" ~ "Bolivia",
idenpa == "76" ~ "Brasil",
idenpa == "152" ~ "Chile",
idenpa == "170" ~ "Colombia",
idenpa == "188" ~ "Costa Rica",
idenpa == "214" ~ "Cuba",
idenpa == "218" ~ "República Dominicana",
idenpa == "222" ~ "Ecuador",
idenpa == "320" ~ "El Salvador",
idenpa == "340" ~ "Guatemala",
idenpa == "484" ~ "Honduras",
idenpa == "558" ~ "México",
idenpa == "591" ~ "Nicaragua",
idenpa == "600" ~ "Panamá",
idenpa == "604" ~ "Paraguay",
idenpa == "858" ~ "Uruguay",
idenpa == "862" ~ "Venezuela"))
data$gdp <- as.numeric(data$gdp)
data$gdp[data$gdp==0] <- NA
data <- na.omit(data)
sjmisc::descr(data,
show = c("label","range", "mean", "sd", "NA.prc", "n"))%>% # Selecciona estadísticos
kable(.,"markdown") # Esto es para que se vea bien en quarto
ggplot(data, aes(x = idenpa, y = gdp)) +
geom_point() +
labs(x = "País", y = "Gdp") +
theme_minimal()+
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(data_sorted, aes(x = factor(idenpa, levels = idenpa), y = gdp)) +
geom_point() +
labs(x = "País", y = "GDP") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
data_sorted <- data %>% arrange(desc(gdp))
ggplot(data_sorted, aes(x = factor(idenpa, levels = idenpa), y = gdp)) +
geom_point() +
labs(x = "País", y = "GDP") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
data %>%
ggplot(aes(x = gdp, y = promedio, label = idenpa)) +
geom_point() +
geom_text(vjust = -0.5) +
labs(x = "GDP", y = "Promedio") +
theme_bw()
rm(list(ls))
load("input/latinobarometro2020.rdata") #Cargar base de datos
load("input/Base de datos Casen 2022 SPSS_18 marzo 2024.sav") #Cargar base de datos
input/Base de datos Casen 2022 SPSS_18 marzo 2024.sav
load("input/Base de datos Casen 2022 SPSS_18 marzo 2024.sav") #Cargar base de datos
load("input/CASEN.sav") #Cargar base de datos
pacman::p_load(sjlabelled,
dplyr, #Manipulacion de datos
stargazer, #Tablas
sjmisc, # Tablas
summarytools, # Tablas
kableExtra, #Tablas
sjPlot, #Tablas y gráficos
corrplot, # Correlaciones
sessioninfo, # Información de la sesión de trabajo
ggplot2) # Para la mayoría de los gráficos
pacman::p_load(sjlabelled,
dplyr, #Manipulacion de datos
stargazer, #Tablas
sjmisc, # Tablas
summarytools, # Tablas
kableExtra, #Tablas
sjPlot, #Tablas y gráficos
corrplot, # Correlaciones
sessioninfo, # Información de la sesión de trabajo
ggplot2,
haven) # Para la mayoría de los gráficos
read_sav("input/CASEN.sav") #Cargar base de datos
# 1.1. Cargar paquetes
pacman::p_load(dplyr, sjmisc, car, sjlabelled, stargazer, haven)
#### 2. Cargar base de datos ####
# 2.1 Pasos previos
rm(list=ls())       # borrar todos los objetos en el espacio de trabajo
options(scipen=999) # valores sin notación científica
# 2.2 Cargar la base de datos desde internet
read_sav("input/CASEN.sav")
# 2.2 Cargar la base de datos desde internet
CASEN <- read_sav("input/CASEN.sav")
View(CASEN)
#### 3. Selección de variables ####
find_var(data = CASEN,"Originarios")
#### 3. Selección de variables ####
find_var(data = CASEN,"originarios")
#### 3. Selección de variables ####
find_var(data = CASEN,"Identificación")
CASEN$r3
frq(CASEN$r3)
CASEN$r3
frq(CASEN$r3)
CASEN$e6a_no_asiste
frq(CASEN$e9depen)
# 3.1 Seleccionar variable de interés y crear nueva base de datos
CASEN <- CASEN %>% select(r3, # Pertenencia a pueblos originarios
e6a, # Nivel educativo más alto asistiendo o asistido
e8, # Tipo de institución de Educación Superior
e9depen, # Dependencia administrativa del establecimiento educacional (Básica y media)
e16,# Pago por la carrera que estudia
e18,# Créditos universitarios recibidos
o1,# Trabajo
y1) # Ingresos
# 3.1 Seleccionar variable de interés y crear nueva base de datos
CASEN <- CASEN %>% select(r3, # Pertenencia a pueblos originarios
e6a, # Nivel educativo más alto asistiendo o asistido
e8, # Tipo de institución de Educación Superior
e9depen, # Dependencia administrativa del establecimiento educacional (Básica y media)
e16,# Pago por la carrera que estudia
e18,# Créditos universitarios recibidos
o1,# Trabajo
y1) # Ingresos
# Comprobar
names(proc_data)
# Comprobar
names(CASEN)
# 3.2 Atributo de las variables
sjlabelled::get_label(CASEN)
#### 4. Procesamiento de variables ####
frq(CASEN$r3)
#### 4. Procesamiento de variables ####
frq(CASEN$e6a)
#### 4. Procesamiento de variables ####
frq(CASEN$e8)
#### 4. Procesamiento de variables ####
frq(CASEN$e6a)
#### 4. Procesamiento de variables ####
frq(CASEN$e8)
# 4.1.3 Recodificación de casos perdidos a NA
CASEN$e8 <- recode(CASEN$e8, "c(-99,-88)=NA")
# 4.1.3 Recodificación de casos perdidos a NA
CASEN$e8 <- recode(CASEN$e8, "c(-99,-88)=NA")
# 1.1. Cargar paquetes
pacman::p_load(dplyr, sjmisc, car, sjlabelled, stargazer, haven)
# 4.1.3 Recodificación de casos perdidos a NA
CASEN$e8 <- recode(CASEN$e8, "c(-99,-88)=NA")
#### 4. Procesamiento de variables ####
frq(CASEN$e8)
# 4.1.3 Recodificación de casos perdidos a NA
CASEN$e8 <- recode(CASEN$e8, "c(-99,-88)=NA")
#### 4. Procesamiento de variables ####
frq(CASEN$e8)
# 4.1.3 Recodificación de casos perdidos a NA
CASEN$e8 <- recode(CASEN$e8, "c(-99,-88)=NA")
frq(CASEN$e8)
#### 4. Procesamiento de variables ####
frq(CASEN$e8)
frq(CASEN$e9depen)
CASEN$e9depen <- recode(CASEN$e9depen, "c(-66)=NA")
CASEN$e9depen <- recode(CASEN$e9depen, "-66=NA")
#### 4. Procesamiento de variables ####
frq(CASEN$e8)
# 4.1.3 Recodificación de casos perdidos a NA
CASEN$e8 <- recode(CASEN$e8, "c(-99,-88)=NA")
frq(CASEN$e16)
# 1.1. Cargar paquetes
pacman::p_load(dplyr, sjmisc, car, sjlabelled, stargazer, haven)
#### 2. Cargar base de datos ####
# 2.1 Pasos previos
rm(list=ls())       # borrar todos los objetos en el espacio de trabajo
options(scipen=999) # valores sin notación científica
# 2.2 Cargar la base de datos desde internet
CASEN <- read_sav("input/CASEN.sav")
# 3.1 Seleccionar variable de interés y crear nueva base de datos
CASEN <- CASEN %>% select(r3, # Pertenencia a pueblos originarios
e6a, # Nivel educativo más alto asistiendo o asistido
e8, # Tipo de institución de Educación Superior
e9depen, # Dependencia administrativa del establecimiento educacional (Básica y media)
e16,# Pago por la carrera que estudia
e18,# Créditos universitarios recibidos
o1,# Trabajo
y1) # Ingresos
# Comprobar
names(CASEN)
# 3.2 Atributo de las variables
sjlabelled::get_label(CASEN)
#### 4. Procesamiento de variables ####
frq(CASEN$e8)
# 4.1.3 Recodificación de casos perdidos a NA
CASEN$e8 <- recode(CASEN$e8, "c(-99,-88)=NA")
#### 4. Procesamiento de variables ####
frq(CASEN$e8)
#### 4. Procesamiento de variables ####
## 4.1 Renombrar variables ##
# 4.1.6 Renombrar variables
CASEN <- CASEN %>% rename("pueb_or"=r3, # Pertenencia a pueblos originarios
"educ"=e6a, # Nivel educativo más alto alcanzado
"est_educ_sup"=e8, # Tipo de establecimiento de educación superior
"est_educ"=e9depen, # Dependencia administrativa del establecimiento educacional (Básica y media)
"pago_educ_sup" = e16, #Pago por la carrera que estudia
"cred_univ" = e18, #Créditos universitarios recibidos
"trabajo" = o1, #Trabajo
"ingresos" = y1) #Ingresos
View(CASEN)
frq(CASEN$e9depen)
frq(CASEN$pueb_or)
frq(CASEN$educ)
frq(CASEN$est_educ_sup)
frq(CASEN$est_educ)
CASEN$est_educ <- recode(CASEN$est_educ, "c(-66)=NA")
frq(CASEN$est_educ)
frq(CASEN$pago_educ_sup)
# 4.2 REcodificación de casos perdidos a NA
CASEN <- CASEN %>% set_na(., na = c(-66, -88, -99))
frq(CASEN$pueb_or)
frq(CASEN$educ)
frq(CASEN$est_educ_sup)
frq(CASEN$est_educ)
frq(CASEN$pago_educ_sup)
frq(CASEN$cred_univ)
frq(CASEN$trabajo)
frq(CASEN$ingresos)
# 2.2 Cargar la base de datos desde internet
CASEN <- read_sav("input/CASEN.sav")
# 3.1 Seleccionar variable de interés y crear nueva base de datos
CASEN <- CASEN %>% select(r3, # Pertenencia a pueblos originarios
e6a, # Nivel educativo más alto asistiendo o asistido
e8, # Tipo de institución de Educación Superior
e9depen, # Dependencia administrativa del establecimiento educacional (Básica y media)
e16,# Pago por la carrera que estudia
e18,# Créditos universitarios recibidos
o1,# Trabajo
y1) # Ingresos
# Comprobar
names(CASEN)
# 3.2 Atributo de las variables
sjlabelled::get_label(CASEN)
#### 4. Procesamiento de variables ####
## 4.1 Renombrar variables ##
CASEN <- CASEN %>% rename("pueb_or"=r3, # Pertenencia a pueblos originarios
"educ"=e6a, # Nivel educativo más alto alcanzado
"est_educ_sup"=e8, # Tipo de establecimiento de educación superior
"est_educ"=e9depen, # Dependencia administrativa del establecimiento educacional (Básica y media)
"pago_educ_sup" = e16, #Pago por la carrera que estudia
"cred_univ" = e18, #Créditos universitarios recibidos
"trabajo" = o1, #Trabajo
"ingresos" = y1) #Ingresos
# Comprobar cambio de nombre
names(CASEN)
# 4.2 Recodificación de casos perdidos a NA
frq(CASEN$pueb_or)
frq(CASEN$educ)
frq(CASEN$est_educ_sup)
CASEN$est_educ_sup <- recode(CASEN$est_educ_sup, "c(-99,-88)=NA")
# Tipo de institucion de educación superior
frq(CASEN$est_educ_sup)
#
frq(CASEN$est_educ)
CASEN$est_educ <- recode(CASEN$est_educ, "c(-66)=NA")
# Dependencia de establecimiento educacional (básica y media)
frq(CASEN$est_educ)
# Pago por la carrera que estudia
frq(CASEN$pago_educ_sup)
CASEN$pago_educ_sup <- recode(CASEN$pago_educ_sup, "c(-88)=NA")
# Pago por la carrera que estudia
frq(CASEN$pago_educ_sup)
# Crédito universitario
frq(CASEN$cred_univ)
# Trabajo
frq(CASEN$trabajo)
# Ingresos
frq(CASEN$ingresos)
View(CASEN)
summary(CASEN$ingresos)
tapply(CASEN$ingresos)
table(CASEN$ingresos)
CASEN$ingresos <- recode(CASEN$ingresos, "c(-88)=NA")
# Ingresos
frq(CASEN$ingresos)
# Ingresos
frq(CASEN$ingresos)
summary(CASEN$ingresos)
## 4.3 Recodificación de casos perdidos para toda la base
CASEN <- CASEN %>% set_na(., na = c(-66, -88, -99))
# Pago por la carrera que estudia
frq(CASEN$pago_educ_sup)
## 4.2 Recodificación de casos perdidos a NA
# Pertenencia a pueblos originarios
frq(CASEN$pueb_or) #No hay que recodificar
# 4.1.5 Reordenar categorías de algunas variables
CASEN$pueb_or <- recode(CASEN$pueb_or, "1:3=1; 4=2; 5:10=3; 11=0")
# 4.1.5 Reordenar categorías de algunas variables
CASEN$pueb_or
# 4.1.5 Reordenar categorías de algunas variables
frq(CASEN$pueb_or)
CASEN$pueb_or <- recode(CASEN$pueb_or, "1:3=1; 4=2; 5:10=3; 11=0; else=NA")
CASEN$pueb_or <- recode(CASEN$pueb_or, "1::10=1; 11=0")
CASEN$pueb_or <- recode(CASEN$pueb_or, "1:10=1; 11=0")
# 4.1.5 Reordenar categorías de algunas variables
frq(CASEN$pueb_or)
# 2.2 Cargar la base de datos desde internet
CASEN <- read_sav("input/CASEN.sav")
# 3.1 Seleccionar variable de interés y crear nueva base de datos
CASEN <- CASEN %>% select(r3, # Pertenencia a pueblos originarios
e6a, # Nivel educativo más alto asistiendo o asistido
e8, # Tipo de institución de Educación Superior
e9depen, # Dependencia administrativa del establecimiento educacional (Básica y media)
e16,# Pago por la carrera que estudia
e18,# Créditos universitarios recibidos
o1,# Trabajo
y1) # Ingresos
# 3.1 Seleccionar variable de interés y crear nueva base de datos
CASEN <- CASEN %>% select(r3, # Pertenencia a pueblos originarios
e6a, # Nivel educativo más alto asistiendo o asistido
e8, # Tipo de institución de Educación Superior
e9depen, # Dependencia administrativa del establecimiento educacional (Básica y media)
e16,# Pago por la carrera que estudia
e18,# Créditos universitarios recibidos
o1,# Trabajo
y1) # Ingresos
# Comprobar
names(CASEN)
# 3.2 Atributo de las variables
sjlabelled::get_label(CASEN)
#### 4. Procesamiento de variables ####
## 4.1 Renombrar variables ##
CASEN <- CASEN %>% rename("pueb_or"=r3, # Pertenencia a pueblos originarios
"educ"=e6a, # Nivel educativo más alto alcanzado
"est_educ_sup"=e8, # Tipo de establecimiento de educación superior
"est_educ"=e9depen, # Dependencia administrativa del establecimiento educacional (Básica y media)
"pago_educ_sup" = e16, #Pago por la carrera que estudia
"cred_univ" = e18, #Créditos universitarios recibidos
"trabajo" = o1, #Trabajo
"ingresos" = y1) #Ingresos
# Comprobar cambio de nombre
names(CASEN)
## 4.2 Recodificación de casos perdidos a NA
# Pertenencia a pueblos originarios
frq(CASEN$pueb_or) #No hay que recodificar
# Nivel educativo
frq(CASEN$educ) #No hay que recodificar
# Tipo de institucion de educación superior
frq(CASEN$est_educ_sup)
CASEN$est_educ_sup <- recode(CASEN$est_educ_sup, "c(-99,-88)=NA")
# 1.1. Cargar paquetes
pacman::p_load(dplyr, sjmisc, car, sjlabelled, stargazer, haven)
#### 2. Cargar base de datos ####
# 2.1 Pasos previos
rm(list=ls())       # borrar todos los objetos en el espacio de trabajo
options(scipen=999) # valores sin notación científica
# 2.2 Cargar la base de datos desde internet
CASEN <- read_sav("input/CASEN.sav")
# 3.1 Seleccionar variable de interés y crear nueva base de datos
CASEN <- CASEN %>% select(r3, # Pertenencia a pueblos originarios
e6a, # Nivel educativo más alto asistiendo o asistido
e8, # Tipo de institución de Educación Superior
e9depen, # Dependencia administrativa del establecimiento educacional (Básica y media)
e16,# Pago por la carrera que estudia
e18,# Créditos universitarios recibidos
o1,# Trabajo
y1) # Ingresos
# Comprobar
names(CASEN)
# 3.2 Atributo de las variables
sjlabelled::get_label(CASEN)
#### 4. Procesamiento de variables ####
## 4.1 Renombrar variables ##
CASEN <- CASEN %>% rename("pueb_or"=r3, # Pertenencia a pueblos originarios
"educ"=e6a, # Nivel educativo más alto alcanzado
"est_educ_sup"=e8, # Tipo de establecimiento de educación superior
"est_educ"=e9depen, # Dependencia administrativa del establecimiento educacional (Básica y media)
"pago_educ_sup" = e16, #Pago por la carrera que estudia
"cred_univ" = e18, #Créditos universitarios recibidos
"trabajo" = o1, #Trabajo
"ingresos" = y1) #Ingresos
# Comprobar cambio de nombre
names(CASEN)
## 4.2 Recodificación de casos perdidos a NA
# Pertenencia a pueblos originarios
frq(CASEN$pueb_or) #No hay que recodificar
CASEN$est_educ_sup <- recode(CASEN$est_educ_sup, "c(-99,-88)=NA")
CASEN$est_educ <- recode(CASEN$est_educ, "c(-66)=NA")
CASEN$pago_educ_sup <- recode(CASEN$pago_educ_sup, "c(-88)=NA")
CASEN$ingresos <- recode(CASEN$ingresos, "c(-88)=NA")
## 4.3 Recodificación de casos perdidos para toda la base
CASEN <- CASEN %>% set_na(., na = c(-66, -88, -99))
CASEN$pueb_or <- recode(CASEN$pueb_or, "1:10=1; 11=0")
# 4.1.5 Reordenar categorías de algunas variables
frq(CASEN$pueb_or)
CASEN$pueb_or <- set_labels(CASEN$pueb_or,
labels=c( "Sí"=0,
"No"=1))
# 4.1.5 Reordenar categorías de algunas variables
frq(CASEN$pueb_or)
frq(CASEN$educ)
CASEN$educ <- recode(CASEN$educ, "1=0; 2:5=NA; 6:7=1; 8:11=2; 12:13=3; 14:15=4")
# Nivel educativo
frq(CASEN$educ)
CASEN$educ <- set_labels(CASEN$educ,
labels=c( "No asistió"=0,
"Básica"=1,
"Media"=2,
"Superior"=3,
"Postgrados"=4))
# Nivel educativo
frq(CASEN$educ)
#
frq(CASEN$est_educ_sup)
CASEN$est_educ_sup <- recode(CASEN$est_educ_sup, "NA=0; 1=1; 2=2; 3:5=3; 6=4; 7=3")
# Tipo de institución de educación superior
frq(CASEN$est_educ_sup)
CASEN$est_educ_sup <- set_labels(CASEN$est_educ_sup,
labels=c( "No asistió"=0,
"Centro de Formación Técnica"=1,
"Instituto Profesional"=2,
"Universidad"=3,
"Postgrados"=4))
# Tipo de institución de educación superior
frq(CASEN$est_educ_sup)
#
frq(CASEN$est_educ)
# 2.2 Cargar la base de datos desde internet
CASEN <- read_sav("input/CASEN.sav")
5336+1545+895+6248
# 3.1 Seleccionar variable de interés y crear nueva base de datos
CASEN <- CASEN %>% select(r3, # Pertenencia a pueblos originarios
e6a, # Nivel educativo más alto asistiendo o asistido
e8, # Tipo de institución de Educación Superior
e9depen, # Dependencia administrativa del establecimiento educacional (Básica y media)
e16,# Pago por la carrera que estudia
e18,# Créditos universitarios recibidos
o1,# Trabajo
y1) # Ingresos
# 3.2 Atributo de las variables
sjlabelled::get_label(CASEN)
#### 4. Procesamiento de variables ####
## 4.1 Renombrar variables ##
CASEN <- CASEN %>% rename("pueb_or"=r3, # Pertenencia a pueblos originarios
"educ"=e6a, # Nivel educativo más alto alcanzado
"est_educ_sup"=e8, # Tipo de establecimiento de educación superior
"est_educ"=e9depen, # Dependencia administrativa del establecimiento educacional (Básica y media)
"pago_educ_sup" = e16, #Pago por la carrera que estudia
"cred_univ" = e18, #Créditos universitarios recibidos
"trabajo" = o1, #Trabajo
"ingresos" = y1) #Ingresos
# Comprobar cambio de nombre
names(CASEN)
## 4.2 Recodificación de casos perdidos a NA
# Pertenencia a pueblos originarios
frq(CASEN$pueb_or) #No hay que recodificar
# Nivel educativo
frq(CASEN$educ) #No hay que recodificar
# Tipo de institucion de educación superior
frq(CASEN$est_educ_sup)
CASEN$est_educ_sup <- recode(CASEN$est_educ_sup, "c(-99,-88)=NA")
CASEN$est_educ <- recode(CASEN$est_educ, "c(-66)=NA")
CASEN$pago_educ_sup <- recode(CASEN$pago_educ_sup, "c(-88)=NA")
CASEN$ingresos <- recode(CASEN$ingresos, "c(-88)=NA")
## 4.3 Recodificación de casos perdidos para toda la base
CASEN <- CASEN %>% set_na(., na = c(-66, -88, -99))
CASEN$pueb_or <- recode(CASEN$pueb_or, "1:10=1; 11=0")
CASEN$pueb_or <- set_labels(CASEN$pueb_or,
labels=c( "Sí"=0,
"No"=1))
CASEN$educ <- recode(CASEN$educ, "1=0; 2:5=NA; 6:7=1; 8:11=2; 12:13=3; 14:15=4")
CASEN$educ <- set_labels(CASEN$educ,
labels=c( "No asistió"=0,
"Básica"=1,
"Media"=2,
"Superior"=3,
"Postgrados"=4))
CASEN$est_educ_sup <- recode(CASEN$est_educ_sup, "NA=0; 1=1; 2=2; 3:5=3; 6=4; 7=3")
CASEN$est_educ_sup <- set_labels(CASEN$est_educ_sup,
labels=c( "No asistió"=0,
"Centro de Formación Técnica"=1,
"Instituto Profesional"=2,
"Universidad"=3,
"Postgrados"=4))
CASEN$est_educ <- recode(CASEN$est_educ, "NA=0; 1=1; 2=2; 3:5=3; 6=4; 7=3")
CASEN$est
# Tipo de establecimiento educacional (media/basica)
frq(CASEN$est_educ)
#
frq(CASEN$pago_educ_sup)
#
frq(CASEN$cred_univ)
#
frq(CASEN$pago_educ_sup)
CASEN$pago_educ_sup <- recode(CASEN$pago_educ_sup, "1=1; 2:3=0")
# Estudiantes en el año 2022 que cuentan con gratuidad
frq(CASEN$pago_educ_sup)
CASEN$pago_educ_sup <- set_labels(CASEN$pago_educ_sup,
labels = c("Sí" = 1
"No" = 0))
CASEN$pago_educ_sup <- set_labels(CASEN$pago_educ_sup,
labels = c("Sí" = 1,
"No" = 0))
# Estudiantes en el año 2022 que cuentan con gratuidad
frq(CASEN$pago_educ_sup)
# 1.1. Cargar paquetes
pacman::p_load(dplyr, sjmisc, car, sjlabelled, stargazer, haven)
# 1.1. Cargar paquetes
pacman::p_load(dplyr, sjmisc, car, sjlabelled, stargazer, haven)
